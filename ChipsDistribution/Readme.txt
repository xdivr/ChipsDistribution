Есть круглый стол для игры в покер для каждого из сидящих за столом было одинаковое количество фишек.
Но кто-то переставил все фишки так, что они перестали быть равномерно распределенными!
Теперь нужно перераспределить фишки так, чтобы у каждого места был одинаковое количество
Но чтобы не потерять ни одной фишки в процессе передвигать фишки можно только между соседними местами.
Более того, надо передвигать фишки только по одной за раз. Каково минимальное количество ходов фишек
Что нужно будет сделать, чтобы вернуть равное количество?
Input:

chips: [1, 5, 9, 10, 5]


Expected Output:

12


Test 2
Input:

chips: [1, 2, 3]


Expected Output:

1


Test 3
Input:

chips: [0, 1, 1, 1, 1, 1, 1, 1, 1, 2]

Expected Output:

1

РЕШЕНИЕ:
1. Для начала нужно определить какое число фишек должно быть у всех участников, для этого берётся среднее из изначального списка.
2. При итерации алгоритма берётся наименьшее число из общего списка и смотрятся соседи, у кого какое число больше. Например: 1,1,2,3 - для числа 1 (0 индекса) соседи 1 и 3.
Если у числа соседние числа равны, в таком случае смотрим соседей этих соседей, какое из этих чисел больше. Например в примере 1,5,9,10,5 для 1 по краям 5 и 5, однако у 5 в конце списка соседнее число 10, а у другого соседа будет 9, в таком случае выберется та 5, у которой сосед 10.
3. Если одной итерации недостаточно для получения результата (как в случае задачи 1,2,3) производится проход по остальным числам, игнорируе найденное раннее наименьшое.
4. Итерации 2 и 3 последовательно повторяются до получения итогового результата. То есть ситуации, когда все числа становятся равны найденному раннее среднему.
